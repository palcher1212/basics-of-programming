import random  # Импортируем модуль random для генерации случайных чисел

def product_of_even_elements(matrix):
    
    # Получаем количество строк и столбцов в матрице
    rows = len(matrix)  # Количество строк
    cols = len(matrix[0]) if rows > 0 else 0  # Количество столбцов (если матрица не пустая)
    
    products = []  # Список для хранения произведений четных элементов по столбцам

    # Проходим по каждому столбцу
    for col in range(cols):
        product = 1  # Инициализируем переменную для произведения четных элементов
        has_even = False  # Флаг для проверки наличия хотя бы одного четного элемента
        
        # Проходим по каждой строке в текущем столбце
        for row in range(rows):
            if matrix[row][col] % 2 == 0:  # Проверяем, является ли элемент четным
                product *= matrix[row][col]  # Умножаем на текущее произведение
                has_even = True  # Устанавливаем флаг, что найден хотя бы один четный элемент
        
        if has_even:
            products.append(product)  # Добавляем произведение в список, если есть четные элементы
        else:
            products.append(0)  # Если четных элементов нет, добавляем 0

    return products  # Возвращаем список произведений четных элементов

def main():
   
    # Запрашиваем у пользователя количество строк и столбцов матрицы
    M = int(input("Введите количество строк (M): "))
    N = int(input("Введите количество столбцов (N): "))

    # Генерация случайной матрицы с элементами от 1 до 10
    matrix = [[random.randint(1, 10) for _ in range(N)] for _ in range(M)]
    
    print("Сгенерированная матрица:")
    for row in matrix:
        print(row)  # Выводим каждую строку матрицы

    # Вычисление произведения четных элементов для каждого столбца
    products = product_of_even_elements(matrix)
    
    print("Произведения четных элементов по столбцам:")
    for col in range(N):
        print(f"Столбец {col + 1}: {products[col]}")  # Выводим результат для каждого столбца

if __name__ == "__main__":
    main()  # Запускаем основную функцию 